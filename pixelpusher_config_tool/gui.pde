/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void detectBtnClick(GButton source, GEvent event) { //_CODE_:detectBtn:397567:
  portLabel.setText("Detecting pusher, please wait...");
  pusher = DetectPusher();
  if (pusher != null) {
    portLabel.setText("Port: " + pusher.port);
    verLabel.setText("Version: "  + pusher.ver);
    configPanel.setVisible(true);
  } else {
    portLabel.setText("Pusher not found");
    verLabel.setText("");
    configPanel.setVisible(false);
  }
} //_CODE_:detectBtn:397567:

public void panel1_Click1(GPanel source, GEvent event) { //_CODE_:configPanel:481018:
  
} //_CODE_:configPanel:481018:

public void saveButtonClick(GButton source, GEvent event) { //_CODE_:saveButton:202835:
  
} //_CODE_:saveButton:202835:

public void custom_slider1_change1(GCustomSlider source, GEvent event) { //_CODE_:usbHoldoffSlider:271887:
  holdoffValueLabel.setText(usbHoldoffSlider.getValueS());
} //_CODE_:usbHoldoffSlider:271887:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("PixelPusher Configuration Tool");
  detectBtn = new GButton(this, 10, 10, 130, 30);
  detectBtn.setText("Detect PixelPusher");
  detectBtn.addEventHandler(this, "detectBtnClick");
  portLabel = new GLabel(this, 150, 20, 340, 20);
  portLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  portLabel.setOpaque(false);
  verLabel = new GLabel(this, 500, 20, 130, 20);
  verLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  verLabel.setOpaque(false);
  configPanel = new GPanel(this, 10, 60, 620, 410, "Pusher Config");
  configPanel.setCollapsible(false);
  configPanel.setDraggable(false);
  configPanel.setText("Pusher Config");
  configPanel.setOpaque(true);
  configPanel.addEventHandler(this, "panel1_Click1");
  label1 = new GLabel(this, 10, 30, 140, 20);
  label1.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  label1.setText("USB Reset Holdoff (ms)");
  label1.setOpaque(false);
  saveButton = new GButton(this, 270, 370, 80, 30);
  saveButton.setText("Save");
  saveButton.setTextBold();
  saveButton.addEventHandler(this, "saveButtonClick");
  usbHoldoffSlider = new GCustomSlider(this, 160, 30, 350, 20, "grey_blue");
  usbHoldoffSlider.setLimits(1020, 0, 1020);
  usbHoldoffSlider.setNbrTicks(255);
  usbHoldoffSlider.setStickToTicks(true);
  usbHoldoffSlider.setNumberFormat(G4P.INTEGER, 0);
  usbHoldoffSlider.setOpaque(false);
  usbHoldoffSlider.addEventHandler(this, "custom_slider1_change1");
  holdoffValueLabel = new GLabel(this, 520, 30, 90, 20);
  holdoffValueLabel.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  holdoffValueLabel.setOpaque(false);
  configPanel.addControl(label1);
  configPanel.addControl(saveButton);
  configPanel.addControl(usbHoldoffSlider);
  configPanel.addControl(holdoffValueLabel);
}

// Variable declarations 
// autogenerated do not edit
GButton detectBtn; 
GLabel portLabel; 
GLabel verLabel; 
GPanel configPanel; 
GLabel label1; 
GButton saveButton; 
GCustomSlider usbHoldoffSlider; 
GLabel holdoffValueLabel; 

